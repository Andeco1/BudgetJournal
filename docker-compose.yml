version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=jdbc:postgresql://db:5432/budget_journal
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SCHEMA=budget_journal
    volumes:
      - ./logs:/usr/local/tomcat/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=budget_journal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d budget_journal"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL to start...' &&
        while ! pg_isready -U postgres; do
          sleep 1
        done &&
        echo 'PostgreSQL started successfully' &&
        postgres -c 'max_connections=100' -c 'shared_buffers=256MB'
      "

volumes:
  postgres_data: 